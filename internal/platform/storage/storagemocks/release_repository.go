// Code generated by mockery v2.39.1. DO NOT EDIT.

package storagemocks

import (
	context "context"

	apiExample "github.com/marcohb99/go-api-example/internal"

	mock "github.com/stretchr/testify/mock"
)

// ReleaseRepository is an autogenerated mock type for the ReleaseRepository type
type ReleaseRepository struct {
	mock.Mock
}

// Save provides a mock function with given fields: ctx, release
func (_m *ReleaseRepository) Save(ctx context.Context, release apiExample.Release) error {
	ret := _m.Called(ctx, release)

	if len(ret) == 0 {
		panic("no return value specified for Save")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, apiExample.Release) error); ok {
		r0 = rf(ctx, release)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NewReleaseRepository creates a new instance of ReleaseRepository. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewReleaseRepository(t interface {
	mock.TestingT
	Cleanup(func())
}) *ReleaseRepository {
	mock := &ReleaseRepository{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
